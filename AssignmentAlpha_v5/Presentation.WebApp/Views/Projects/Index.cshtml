@using System.Text.Json
@model Data.Entities.ProjectEntity

@* @{ *@
@*     ViewData["Title"] = "Projects"; *@
@*     var selectedUsersJson = JsonSerializer.Serialize( *@
@*         Model.ProjectMembers.Select(m => new *@
@*         { *@
@*             id = m.User.Id, *@
@*             imageUrl = m.User.Image?.ImageUrl, *@
@*             fullName = m.User.FirstName + " " + m.User.LastName *@
@*         }) *@
@*     ); *@
@* } *@

@{
    ViewData["Title"] = "Projects";

    var selectedUsersJson = Model?.ProjectMembers != null
        ? JsonSerializer.Serialize(
            Model.ProjectMembers.Select(m => new
            {
                id = m.User?.Id,
                imageUrl = m.User?.Image?.ImageUrl,
                fullName = (m.User?.FirstName ?? "") + " " + (m.User?.LastName ?? "")
            })
        )
        : "[]";
}

<div id="projects">
    <div class="card">
        <div class="card-body">
            <form asp-controller="Projects" asp-action="Add" method="post" novalidate>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" name="SelectedUserIds" id="SelectedUserIds" />
                
                <div class="form-group">
                    <div class="form-label">Project Name</div>
                    <input asp-for="ProjectName" class="form-input" />
                </div>
                
                <div class="form-group">
                    <div class="form-label">Members</div>
                    <div id="tagged-users" class="form-input form-tag-select">
                        <input type="text" id="user-search" class="form-tag-input" placeholder="Add member..." />
                        <label for="user-search" class="fa-solid fa-ellipsis"></label>
                        <div id="user-search-results" class="search-results"></div>
                    </div>
                </div>
                
                <button type="submit" class="btn btn-submit">SAVE</button>
            </form>
        </div>
    </div>
</div>

<script>
    const preSelectedUsers = @Html.Raw(selectedUsersJson);
    
    initTagSelector({
        containerId: 'tagged-users',
        inputId: 'user-search',
        resultsId: 'user-search-results',
        searchUrl: (query) => '@Url.Action("SearchUsers", "Users")' + '?term=' + encodeURIComponent(query),
        displayProperty: 'fullName',
        tagClass: 'user-tag',
        avatarFolder: '/images/uploads/users/',
        emptyMessage: 'No users found.',
        preSelectedTags: preSelectedUsers,
        selectedInputIds: 'SelectedUserIds'
    });
    
</script>