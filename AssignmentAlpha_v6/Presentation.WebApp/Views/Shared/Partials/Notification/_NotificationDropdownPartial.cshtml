@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier) ?? "anonymous";
    var notifications = await notificationService.GetNotificationsAsync(userId);
    notifications = notifications.OrderByDescending(x => x.Created);
}

<div class="notification-dropdown-container">
    <button id="notification-dropdown-button" data-type="dropdown" data-target="#notification-dropdown" class="btn-notification fa-duotone fa-solid fa-bell" style="--fa-primary-opacity: 0.4; --fa-secondary-opacity: 1;">
        @if (notifications.Any())
        {
            <div class="dot dot-red"></div>
        }
    </button>
    
    <div id="notification-dropdown" class="notification-dropdown">
        <div class="notification-header">
            <h4>Notifications</h4>
            <span class="notification-number">@notifications.Count()</span>
        </div>
        <div class="dropdown-divider"></div>
        <div class="notifications">
            
            @foreach (var notification in notifications)
            {
                <div class="notification-item" data-id="">
                    <img class="image" src="@notification.Icon" alt="Icon" />
                    <div class="message">@notification.Message</div>
                    <div class="time" data-created="@notification.Created.ToString("s")">@notification.Created</div>
                    <button class="btn-close-fa" onclick="dismissNotification(@notification.Id)"></button>
                </div>
            }
            
        </div>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build()
        
    connection.on("AllReceiveNotification", function (notification) {
        const notifications = document.querySelector('.notifications')
        
        const item = document.createElement('div')
        item.className = 'notification-item'
        item.setAttribute('data-id', notification.id)
        item.innerHTML = 
        `
                <img class="image" src="${notification.icon}" alt="User Notification Icon" />
                <div class="message">${notification.message}</div>
                <div class="time" data-created="${new Date(notification.created).toISOString()}">${notification.created}</div>
                <button class="btn-close-fa" onclick="dismissNotification('${notification.id}')"></button>
         `
         
         notifications.insertBefore(item,  notifications.firstChild)
         updateRelativeTimes()
         updateNotificationCount()
    })
    
    connection.on("NotificationDismissed", function(notificationId) {
        const element = document.querySelector(`.notification-item[data-id="${notificationId}"]`)
        if (element) {
            element.remove()
            updateNotificationCount()
        }
    });
    
    connection.start().catch(error => console.error(error))
    
    async function dismissNotification(notificationId) {
        console.log('Trying to dismiss: ', notificationId)
        try {
            const res = await fetch(`/api/notifications/dismiss/${notificationId}`, { method : 'POST' })
            if (res.ok) {
                removeNotification(notificationId)
            }
            else {
                console.error('Error removing notification')
            }
        }
        catch (error) {
            console.error('Error removing notification: ', error)
        }
    }
    
    function removeNotification(notificationId) {
        const element = document.querySelector(`.notification-item[data-id="${notificationId}"]`)
        if (element) {
            element.remove()
            updateNotificationCount()
        }
    }
    
    function updateNotificationCount() {
        const notifications = document.querySelector('.notifications')
        const notificationNumber = document.querySelector('.notification-number')
        const notificationDropdownButton = document.querySelector('#notification-dropdown-button')
        const count = notifications.querySelectorAll('.notification-item')
        
        if (notificationNumber) {
            notificationNumber.textContent = count
        }
        
        let dot = notificationDropdownButton.querySelector('.dot.dot-red')
        if (count > 0 && !dot) {
            dot = document.createElement('div')
            dot.className = 'dot dot-red'
            notificationDropdownButton.appendChild(dot)
        }
        
        if (count === 0 && dot) {
            dot.remove()
        }
    }
    
</script>